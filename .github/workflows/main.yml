on:
  workflow_dispatch:
  
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
    
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - run: |
          sudo apt-get update -y

      - run: |
          sudo apt-get install -y ninja-build libgtk-3-dev libmpv-dev mpv
          
      - name: Install Dependencies
        run: flutter pub get

      - name: Build linux
        run: flutter build linux --release

      - name: Build APK
        run: flutter build apk --release

      - name: Build appBundle
        run: flutter build appbundle --release

      - name: Build web
        run: flutter build web --release

      - name: Compress Archives
        run: |
          tar -czf linux_build.tar.gz -C build/linux/x64/release bundle
          tar -czf web_build.tar.gz -C build web

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            linux_build.tar.gz

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,linux_build.tar.gz"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}

  macos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
    
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install Dependencies
        run: flutter pub get

      - name: Build MacOS
        run: flutter build macos --release

      - name: Build APK
        run: flutter build ios --release --no-codesign

      - name: Compress Archives and IPAs
        run: |
          tar -czf macos_build.tar.gz -C build macos
          tar -czf ios_build.tar.gz -C build ios


      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            macos_build.tar.gz
            ios_build.tar.gz

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "macos_build.tar.gz,ios_build.tar.gz"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}

  windows:
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
    
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Compress Archives and IPAs
        run: |
          tar -czf windows_build.tar.gz -C build windows


      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            windows_build.tar.gz

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "windows_build.tar.gz"
          tag: ${{ github.run_number }}
          token: ${{ secrets.TOKEN }}